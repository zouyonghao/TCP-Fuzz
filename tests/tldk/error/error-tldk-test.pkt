// Establish a connection.
0   socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
+0  setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0

+0  bind(3, ..., ...) = 0
+0  listen(3, 1) = 0

+0  < S 0:0(0) win 32792 <mss 1000,sackOK,nop,nop,nop,wscale 7>
+0 ~ +1  > S. 0:0(0) ack 1 <...>

+.1 < . 1:1(0) ack 1 win 32792
+0  accept(3, ..., ...) = 4
+0 fcntl(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0

+0 < . 1:6191(6190) ack 1 win 13113 
// inject fuzz error packet
// fuzz_file_index is 20
// kind is 3, length is 3
// set ip ihl to 0x02
// set tcp ack seq to 0x6400767a
+0 < . 6191:16056(9865) ack 2054553700 win 26169 <wscale 102,eol>
+0.1 read(4, ..., 98) =  98
+0.1 write(4, ..., 50) =  50
// fuzz_file_index is 53
// kind is 4, length is 2
+0 < . 6191:11493(5302) ack 1 win 12601 <sackOK,eol,eol>
// inject fuzz error packet
// set ip ihl to 0x04
// set tcp seq to 0x76003734
+0 < . 876019830:876028346(8516) ack 1 win 12407
+0 < . 11493:17959(6466) ack 1 win 26986 
// inject fuzz error packet
// fuzz_file_index is 111
// kind is 0, length is 1
// set ip ihl to 0x0e
// set tcp seq to 0x7100766e
+0 < . 1853227121:1853231082(3961) ack 1 win 15667 <eol,eol,eol,eol>
// fuzz_file_index is 150
// kind is 8, length is 10
// fuzz_file_index is 162
// kind is 254, length is 11
// fuzz_file_index is 164
// kind is 0, length is 1
// unknown experimental option
+0 < . 17959:21975(4016) ack 1 win 12338 
// inject fuzz dup packets
// set ip ihl to 0x05
// set tcp ack seq to 0x6e006730
+0 < . 21975:23349(1374) ack 812056686 win 13422 
// fuzz_file_index is 228
// kind is 254, length is 33
// unknown experimental option
+0 < . 21975:22984(1009) ack 1 win 28979 
// fuzz_file_index is 242
// kind is 0, length is 1
+0 < . 21975:31196(9221) ack 1 win 11570 <eol,eol,eol,eol>
// fuzz_file_index is 285
// kind is 5, length is 32
// TCP SACK option not a multiple of SACK block size
+0 < . 21975:27781(5806) ack 1 win 30062 
+0.1 write(4, ..., 115) =  115
// fuzz_file_index is 317
// kind is 8, length is 10
// fuzz_file_index is 319
// kind is 0, length is 1
+0 < . 21975:25096(3121) ack 1 win 11633 <TS val 892626794 ecr 1848651057,eol,eol>
// inject fuzz error packet
// set ip ihl to 0x06
// set tcp ack seq to 0x3300636e
+0 < . 25096:34801(9705) ack 1851981875 win 30569 
+0.1 write(4, ..., 118) =  118
+0 < . 25096:32838(7742) ack 1 win 14648 
// inject fuzz error packet
// fuzz_file_index is 376
// kind is 1, length is 1
// fuzz_file_index is 393
// kind is 5, length is 16
// set ip ihl to 0x01
// set tcp ack seq to 0x72006e67
// TCP SACK option not a multiple of SACK block size
+0 < . 32838:34212(1374) ack 1735262322 win 12401 
+0.1 read(4, ..., 113) =  113
// fuzz_file_index is 423
// kind is 0, length is 1
// fuzz_file_index is 456
// kind is 5, length is 32
// TCP SACK option not a multiple of SACK block size
+0 < . 32838:38644(5806) ack 1 win 30070 
// inject fuzz dup packets
// set ip ihl to 0x07
// set tcp seq to 0x39003534
+0 < . 875888697:875895408(6711) ack 1 win 28531 
// fuzz_file_index is 496
// kind is 254, length is 17
// set ip ihl to 0x00
// unknown experimental option
+0 < . 38644:38644(0) ack 1 win 26474 
// set ip ihl to 0x00
+0 < . 38644:38644(0) ack 1 win 0 
// set ip ihl to 0x00
+0 < . 38644:38644(0) ack 1 win 0 
+0.1 read(4, ..., 1) =  1
+0.1 write(4, ..., 0) =  0
// set ip ihl to 0x00
+0 < . 38644:38644(0) ack 1 win 0 
// inject fuzz error packet
// set ip ihl to 0x00
+0 < . 38644:38644(0) ack 1 win 0 
+0.1 read(4, ..., 1) =  1
+0.1 write(4, ..., 0) =  0
// set ip ihl to 0x00
+0 < . 38644:38644(0) ack 1 win 0 
// inject fuzz error packet
// set ip ihl to 0x00
+0 < . 38644:38644(0) ack 1 win 0 
+0.1 read(4, ..., 1) =  1
+0.1 write(4, ..., 0) =  0
// set ip ihl to 0x00
+0 < . 38644:38644(0) ack 1 win 0 
// inject fuzz error packet
// set ip ihl to 0x00
+0 < . 38644:38644(0) ack 1 win 0 
+0.1 read(4, ..., 1) =  1
+0.1 write(4, ..., 0) =  0
+0 < . 38644:44821(6177) ack 1 win 12593 
+0.1 read(4, ..., 20) =  20
+0 < . 38644:44821(6177) ack 1 win 12593 
+0.1 read(4, ..., 20) =  20
+0 < . 38644:44821(6177) ack 1 win 12593 
+0.1 read(4, ..., 20) =  20

