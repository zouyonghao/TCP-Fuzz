// Establish a connection.
0   socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
+0  setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0

+0  bind(3, ..., ...) = 0
+0  listen(3, 1) = 0

+0  < S 0:0(0) win 32792 <mss 1000,sackOK,nop,nop,nop,wscale 7>
+0 ~ +1  > S. 0:0(0) ack 1 <...>

+.1 < . 1:1(0) ack 1 win 32792
+0  accept(3, ..., ...) = 4

+0 fcntl(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0

+0 < . 1:21(20) ack 1 win 14711
+0 < . 1:41(40) ack 1 win 28273
+0.1 read(4, ..., 115) =  40
+0 write(4, ..., 110) =  110
+0.1 ioctl(4, SIOCINQ, [0]) = 0

//+0 < . 41:61(20) ack 1 win 31347
+0 < F. 41:61(20) ack 1 win 13101
+0.1 write(4, ..., 100) = 100

+0 < . 41:61(20) ack 1 win 13101
+0.1 write(4, ..., 100) = 100

+0 < F. 61:61(0) ack 1 win 13101
+0.1 write(4, ..., 100) = 100

// next line would not generate EPIPE in linux, WHY?
//+0 < F. 61:62(1) ack 1 win 30330 
+0 < F. 61:66(5) ack 1 win 30330
+0.1 write(4, ..., 100) =  -1 EPIPE (Broken pipe)
+0 read(4, ..., 1000) = 20
// next read behave differently in linux (return 0)
+0 read(4, ..., 1000) = -1 EPIPE (Broken pipe)
